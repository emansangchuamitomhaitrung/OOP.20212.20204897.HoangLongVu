1. Question: If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. Does JAVA allow you to do this? Answer: A constructor should have the same name as the class. Creating the two constructors above is deemed to be an act of constructor overloading.Constructor overloading is possible if and only if the two constructors have different signatures and the same name. However, a constructor to build DVD by title and a constructor to build DVD by category have the same number of arguments (one), and the same type of arguments (String); thus they have the same signature despite holding the same name. Therefore, JAVA does not allow us to build these two constructors concurrently in the same class.2. Question: `addDigitalVideoDisc` has two (of the four) “variants”, in which we can pass a list of DVDs or pass an arbitrary number of arguments for DVD. Which do you prefer in this case?Answer: Personally, the second option (passing any number of arguments) is the one to go. With varags, we can add any number of parameters, and the method still receives an array (which I believe is a good data structure for convenient manipulation). Moreover, the method calls will be fairly simpler (no need for `new Array[] {…}` as in the first option). Moreover, this option would be best if we are not sure about the number of arguments need to be passed in the method beforehand.Furthermore, the `addDigitalVideoDisc` is deemed to be overloaded to accept different number of parameters in this Lab. Thus instead of calling the method multiple times, we can simply use varags for convenience.